CREATE SCHEMA HEALTHCONNECT;

USE HEALTHCONNECT;

CREATE TABLE FACILITY_ADDRESS (
    AddressID INT UNSIGNED PRIMARY KEY,
    StreetAddress VARCHAR(60),
    City VARCHAR(60),
    State VARCHAR(20),
    Zip MEDIUMINT(5)
);

CREATE TABLE FACILITIES (
    FacilityUID MEDIUMINT UNSIGNED AUTO_INCREMENT,
    FacilityName VARCHAR(100) NOT NULL,
    Details TEXT,
    FacilityCategory VARCHAR(30),
    ServiceRating TINYINT UNSIGNED,
    AddressID INT UNSIGNED,
    PRIMARY KEY (FacilityUID),
    FOREIGN KEY (AddressID)
        REFERENCES FACILITY_ADDRESS (AddressID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE FACILITY_STATISTICS (
    FacilityUID MEDIUMINT UNSIGNED,
    StatName VARCHAR(30),
    StatValue INT,
    PRIMARY KEY (FacilityUID , StatName),
    FOREIGN KEY (FacilityUID)
        REFERENCES FACILITIES (FacilityUID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE FACILITY_SPECIAL_SERVICES (
    FacilityUID MEDIUMINT UNSIGNED,
    ServiceName VARCHAR(30),
    ServiceDetails TEXT,
    PRIMARY KEY (FacilityUID , ServiceName),
    FOREIGN KEY (FacilityUID)
        REFERENCES FACILITIES (FacilityUID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE FACILITY_CONTACT_INFORMATION (
    ContactID INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    FacilityUID MEDIUMINT UNSIGNED NOT NULL,
    Email VARCHAR(255),
    Phone VARCHAR(20),
    Link VARCHAR(255),
    IsPrimary BOOLEAN NOT NULL DEFAULT FALSE,
    ContactType ENUM('Email', 'Phone', 'Link') NOT NULL,
    FOREIGN KEY (FacilityUID)
        REFERENCES FACILITIES (FacilityUID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT chk_contact_info CHECK (Email IS NOT NULL OR Phone IS NOT NULL
        OR Link IS NOT NULL)
);

CREATE TABLE FACILITY_OPERATING_HOURS (
    FacilityUID MEDIUMINT UNSIGNED,
    DayofWeek ENUM('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'),
    OpenHour TIME,
    CloseHour TIME,
    PRIMARY KEY (FacilityUID , DayOfWeek),
    FOREIGN KEY (FacilityUID)
        REFERENCES FACILITIES (FacilityUID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE PROVIDERS (
    ProviderUID INT UNSIGNED,
    FirstName VARCHAR(100),
    MiddleName VARCHAR(100),
    LastName VARCHAR(100),
    HasAccess BOOLEAN,
    PRIMARY KEY (ProviderUID)
);

CREATE TABLE PROVIDER_FACILITIES (
    ProviderUID INT UNSIGNED,
    FacilityUID MEDIUMINT UNSIGNED,
    PRIMARY KEY (ProviderUID , FacilityUID),
    FOREIGN KEY (ProviderUID)
        REFERENCES PROVIDERS (ProviderUID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (FacilityUID)
        REFERENCES FACILITIES (FacilityUID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE SPECIALTY (
    SpecialtyUID INT UNSIGNED,
    Specialties VARCHAR(50),
    PRIMARY KEY (SpecialtyUID)
);

CREATE TABLE QUALIFICATION (
    QualificationUID INT UNSIGNED,
    Qualification VARCHAR(50),
    PRIMARY KEY (QualificationUID)
);


CREATE TABLE PROVIDER_SPECIALTIES (
    ProviderUID INT UNSIGNED,
    SpecialtyUID INT UNSIGNED,
    PRIMARY KEY (ProviderUID , SpecialtyUID),
    FOREIGN KEY (ProviderUID)
        REFERENCES PROVIDERS (ProviderUID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (SpecialtyUID)
        REFERENCES SPECIALTY (SpecialtyUID)
        ON UPDATE CASCADE ON DELETE CASCADE
);


    

CREATE TABLE PROVIDER_QUALIFICATIONS (
    ProviderUID INT UNSIGNED,
    QualificationUID INT UNSIGNED,
    PRIMARY KEY (ProviderUID , QualificationUID),
    FOREIGN KEY (ProviderUID)
        REFERENCES PROVIDERS (ProviderUID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (QualificationUID)
        REFERENCES QUALIFICATION (QualificationUID)
        ON UPDATE CASCADE ON DELETE CASCADE
);



CREATE TABLE PROVIDER_CONTACT_INFORMATION (
    ProviderUID INT UNSIGNED,
    Phone VARCHAR(20),
    Email VARCHAR(255),
    ContactType ENUM('Phone', 'Email') NOT NULL,
    IsPrimary BOOLEAN NOT NULL DEFAULT FALSE,
    PRIMARY KEY (ProviderUID , ContactType),
    FOREIGN KEY (ProviderUID)
        REFERENCES PROVIDERS (ProviderUID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT chk_provider_contact_info CHECK (Phone IS NOT NULL OR Email IS NOT NULL)
);

CREATE TABLE PATIENTS (
    PatientUID INT UNSIGNED 
		PRIMARY KEY,
    FirstName VARCHAR(100),
    MiddleName VARCHAR(100),
    LastName VARCHAR(100),
    DateOfBirth DATE,
    HasAccess BOOLEAN
);

CREATE TABLE PATIENT_ADDRESS (
    AddressID INT UNSIGNED PRIMARY KEY,
    PatientUID INT UNSIGNED 
		REFERENCES PATIENTS (PatientUID)
		ON DELETE CASCADE ON UPDATE CASCADE,
    StreetAddress VARCHAR(60),
    City VARCHAR(60),
    State VARCHAR(20),
    Zip MEDIUMINT(5),
    AddressType VARCHAR(10)
);

CREATE TABLE PATIENT_CONTACT_INFORMATION (
    ContactID INT AUTO_INCREMENT 
		PRIMARY KEY,
    PatientUID INT UNSIGNED 
		NOT NULL,
    PhoneNumber VARCHAR(20),
    EmailAddress VARCHAR(255),
    IsPrimary BOOLEAN NOT NULL DEFAULT FALSE,
    ContactType ENUM('Mobile', 'Home', 'Work', 'Other') NOT NULL,
    FOREIGN KEY (PatientUID)
        REFERENCES PATIENTS (PatientUID)
        ON DELETE CASCADE,
    CONSTRAINT chk_patient_contact_info CHECK (PhoneNumber IS NOT NULL
        OR EmailAddress IS NOT NULL)
);

CREATE TABLE PATIENT_PREFERRED_FACILITIES (
    PatientUID INT UNSIGNED 
		REFERENCES PATIENTS (PatientUID)
		ON DELETE CASCADE,
    FacilityUID MEDIUMINT UNSIGNED 
		REFERENCES FACILITIES (FacilityUID)
		ON DELETE CASCADE,
    PRIMARY KEY (PatientUID , FacilityUID)
);

CREATE TABLE PREMIUM_PATIENTS (
    PatientUID INT UNSIGNED 
		PRIMARY KEY 
		REFERENCES PATIENTS (PatientUID)
		ON DELETE CASCADE,
    HasMembership BOOLEAN
);

CREATE TABLE ENGAGEMENT_FORUM (
    PostUID INT UNSIGNED AUTO_INCREMENT,
    PostedOn DATETIME NOT NULL,
    PostData TEXT,
    PatientUID INT UNSIGNED,
    PRIMARY KEY (PostUID),
    FOREIGN KEY (PatientUID)
        REFERENCES PATIENTS (PatientUID)
        ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE EQUIPMENT_SERVICE (
    EquipmentUID INT UNSIGNED,
    EquipmentName VARCHAR(80),
    DateAquired DATE,
    LastServiceDate DATE,
    ServiceInterval SMALLINT UNSIGNED,
    FacilityUID MEDIUMINT UNSIGNED,
    PRIMARY KEY (EquipmentUID),
    FOREIGN KEY (FacilityUID)
        REFERENCES FACILITIES (FacilityUID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE WELLNESS_PROGRAM (
    ProgramUID INT UNSIGNED AUTO_INCREMENT,
    ProgramName VARCHAR(255),
    ProgramDetails TEXT,
    Progress VARCHAR(255),
    Goal VARCHAR(255),
    FacilityUID MEDIUMINT UNSIGNED,
    PRIMARY KEY (ProgramUID),
    FOREIGN KEY (FacilityUID)
        REFERENCES FACILITIES (FacilityUID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE WELLNESS_PROGRAM_FEEDBACK (
    FeedbackUID INT UNSIGNED AUTO_INCREMENT,
    ProgramUID INT UNSIGNED 
		REFERENCES WELLNESS_PROGRAM (ProgramUID)
		ON DELETE CASCADE ON UPDATE CASCADE,
    PatientUID INT UNSIGNED 
		REFERENCES PATIENTS (PatientUID)
		ON DELETE CASCADE ON UPDATE CASCADE,
    FeedbackDate DATETIME NOT NULL,
    PatientFeedback TEXT,
    PRIMARY KEY (FeedbackUID)
);

CREATE TABLE INSURANCE_POLICIES (
    PolicyUID BIGINT UNSIGNED 
		AUTO_INCREMENT,
    CoverageDetails TEXT,
    PatientUID INT UNSIGNED,
    PolicyHolderName VARCHAR(255),
    StartDate DATE NOT NULL,
    EndDate DATE,
    PolicyNumber VARCHAR(50) NOT NULL,
    ProviderName VARCHAR(255),
    PRIMARY KEY (PolicyUID),
    FOREIGN KEY (PatientUID)
        REFERENCES PATIENTS (PatientUID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE BILLING (
    BillUID BIGINT UNSIGNED 
		AUTO_INCREMENT,
    PolicyUID BIGINT UNSIGNED,
    DueDate DATE NOT NULL,
    PostedDate DATE NOT NULL,
    BillDescription TEXT,
    Amount DECIMAL(10,2) NOT NULL,
    PaidAmount DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    OutstandingAmount DECIMAL(10,2) GENERATED ALWAYS AS (Amount - PaidAmount) STORED,
    PaymentStatus ENUM('Unpaid','Partially Paid', 'Paid', 'Overdue') NOT NULL DEFAULT 'Unpaid',
    FacilityUID MEDIUMINT UNSIGNED,
    PatientUID INT UNSIGNED,
    PRIMARY KEY (BillUID),
    FOREIGN KEY (FacilityUID)
        REFERENCES FACILITIES (FacilityUID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (PatientUID)
        REFERENCES PATIENTS (PatientUID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (PolicyUID)
        REFERENCES INSURANCE_POLICIES(PolicyUID)
        ON UPDATE CASCADE ON DELETE SET NULL
);

CREATE TABLE JOURNALS (
    EntryUID BIGINT UNSIGNED 
		AUTO_INCREMENT 
        PRIMARY KEY,
    JournalDate DATETIME NOT NULL,
    Entry TEXT NOT NULL,
    Visibility ENUM('PRIVATE', 'SHARED', 'PUBLIC') NOT NULL DEFAULT 'PRIVATE',
    PatientUID INT UNSIGNED REFERENCES PATIENTS (PatientUID)
    ON DELETE SET NULL ON UPDATE CASCADE
);


CREATE TABLE PATIENT_RECORDS (
    RecordUID BIGINT UNSIGNED AUTO_INCREMENT,
    PermissionRequirement BOOLEAN,
    PatientUID INT UNSIGNED,
    ProviderUID INT UNSIGNED,
    PRIMARY KEY (RecordUID),
    FOREIGN KEY (PatientUID)
        REFERENCES PATIENTS (PatientUID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (ProviderUID)
        REFERENCES PROVIDERS (ProviderUID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE APPOINTMENTS (
    AppointmentUID BIGINT UNSIGNED AUTO_INCREMENT,
    AppointmentDateTime DATETIME,
    AppointmentType ENUM('In Person', 'Virtual', 'Phone', 'Other') 
		NOT NULL 
		DEFAULT 'In Person',
    AppointmentDetails TEXT,
    FollowUpDetails TEXT,
    PatientFeedback TEXT,
    PatientUID INT UNSIGNED NOT NULL,
    ProviderUID INT UNSIGNED NOT NULL,
    AppointmentStatus ENUM('Scheduled', 'Cancelled', 'Completed') DEFAULT 'Scheduled',
    PRIMARY KEY (AppointmentUID),
    FOREIGN KEY (PatientUID)
        REFERENCES PATIENTS (PatientUID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (ProviderUID)
        REFERENCES PROVIDERS (ProviderUID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE PERSONALIZED_PLANS (
    PlanUID INT UNSIGNED,
    PlanDetails TEXT,
    Progress VARCHAR(100),
    GoalDescription TEXT,
    PlanConsultation TEXT,
    PatientUID INT UNSIGNED,
    PRIMARY KEY (PlanUID),
    FOREIGN KEY (PatientUID)
        REFERENCES PATIENTS (PatientUID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE PATIENT_VISITS (
    PatientUID INT UNSIGNED REFERENCES PATIENTS (PatientUID)
    ON DELETE CASCADE ON UPDATE CASCADE,
    FacilityUID MEDIUMINT UNSIGNED REFERENCES FACILITIES (FacilityUID)
    ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (PatientUID , FacilityUID)
);

CREATE TABLE WELLNESS_PROGRAM_ENROLLMENT (
    ProgramUID INT UNSIGNED REFERENCES WELLNESS_PROGRAM (ProgramUID)
    ON DELETE CASCADE ON UPDATE CASCADE,
    PatientUID INT UNSIGNED REFERENCES PATIENTS (PatientUID)
    ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (ProgramUID , PatientUID)
);

CREATE TABLE GENERAL_RECORD (
    RecordUID BIGINT UNSIGNED,
    RecordDate DATE,
    RecordInformation TEXT,
    ProviderUID INT UNSIGNED,
    PRIMARY KEY (RecordUID),
    FOREIGN KEY (RecordUID)
        REFERENCES PATIENT_RECORDS (RecordUID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE LAB_RECORD (
    RecordUID BIGINT UNSIGNED,
    DateOrdered DATE,
    DateGenerated DATE,
    Results TEXT,
    ProviderUID INT UNSIGNED,
    PRIMARY KEY (RecordUID),
    FOREIGN KEY (RecordUID)
        REFERENCES PATIENT_RECORDS (RecordUID)
        ON UPDATE CASCADE ON DELETE CASCADE
); 
